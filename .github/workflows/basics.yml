name: CS

on:
  # Run on all pushes and on all pull requests.
  # Prevent the build from running when there are only irrelevant changes.
  push:
    paths-ignore:
      - '**.md'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checkcs:
    if: ${{ false }}
    name: 'Basic CS and QA checks'
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: '	'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: cs2pr

      # Validate the composer.json file.
      # @link https://getcomposer.org/doc/03-cli.md#validate
      - name: Validate Composer installation
        run: composer validate --no-check-all --strict

      - name: 'Composer: adjust dependencies'
        run: |
          # The sniff stage doesn't run the unit tests, so no need for PHPUnit.
          composer remove --no-update --dev phpunit/phpunit --no-scripts --no-interaction
          # Using PHPCS `master` as an early detection system for bugs upstream.
          composer require --no-update --no-scripts squizlabs/php_codesniffer:"dev-master" --no-interaction
          # Using WPCS `master` (=stable). This can be changed back to `dev-develop` after the WPCS 3.0.0 release.
          composer require --no-update --no-scripts wp-coding-standards/wpcs:"dev-master" --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libxml2-utils

      # Show XML violations inline in the file diff.
      # @link https://github.com/marketplace/actions/xmllint-problem-matcher
      - uses: korelstar/xmllint-problem-matcher@v1

      # Validate the ruleset XML file.
      # @link http://xmlsoft.org/xmllint.html
      - name: Validate ruleset against XML schema
        run: xmllint --noout --schema ./vendor/squizlabs/php_codesniffer/phpcs.xsd ./Yoast/ruleset.xml

      # Validate the Docs XML files.
      # @link http://xmlsoft.org/xmllint.html
      # For the build to properly error when validating against a scheme, these each have to be in their own condition.
      - name: Lint the XML sniff docs
        run: xmllint --noout ./Yoast/Docs/*/*Standard.xml

      # Check the code-style consistency of the XML ruleset files.
      - name: Check XML ruleset code style
        run: diff -B --tabsize=4 ./Yoast/ruleset.xml <(xmllint --format "./Yoast/ruleset.xml")

      # Check the codestyle of the files within YoastCS.
      # The results of the CS check will be shown inline in the PR via the CS2PR tool.
      # @link https://github.com/staabm/annotate-pull-request-from-checkstyle/
      - name: Check PHP code style
        continue-on-error: true
        run: composer check-cs -- --report-full --report-checkstyle=./phpcs-report.xml

      - name: Show PHPCS results in PR
        run: cs2pr ./phpcs-report.xml

      # Check that the sniffs available are feature complete.
      - name: Check sniff feature completeness
        run: composer check-complete

  temp-test-docs:
    if: ${{ false }}
    name: 'DocsXSD validation'
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: '	'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: cs2pr

      - name: 'Composer: adjust dependencies'
        run: |
          composer require --no-update --no-scripts squizlabs/php_codesniffer:"dev-master" --no-interaction
          composer require --no-update --no-scripts wp-coding-standards/wpcs:"dev-develop" --no-interaction
          composer require --no-update --no-scripts phpcsstandards/phpcsextra:"dev-develop" --no-interaction
          composer require --no-update --no-scripts phpcompatibility/php-compatibility:"dev-develop as 9.9.99" --no-interaction
          composer require --no-update --no-scripts phpcsstandards/phpcsdevtools:"dev-xsd-docs-schema" --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2

      - name: Install xmllint
        run: |
          sudo apt-get update
          sudo apt-get install --no-install-recommends -y libxml2-utils

      # Validate the docs XML files.
      - name: Validate the PHPCS native Generic docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/Generic/Docs/*/*.xml

      - name: Validate the PHPCS native PEAR docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/PEAR/Docs/*/*.xml

      - name: Validate the PHPCS native PSR1 docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/PSR1/Docs/*/*.xml

      - name: Validate the PHPCS native PSR2 docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/PSR2/Docs/*/*.xml

      - name: Validate the PHPCS native PSR12 docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/PSR12/Docs/*/*.xml

      - name: Validate the PHPCS native Squiz docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/Squiz/Docs/*/*.xml

      - name: Validate the PHPCS native Zend docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/squizlabs/php_codesniffer/src/Standards/Zend/Docs/*/*.xml

      - name: Validate the PHPCompatibility docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/phpcompatibility/php-compatibility/PHPCompatibility/Docs/*/*.xml

      - name: Validate the WPCS docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/wp-coding-standards/wpcs/WordPress/Docs/*/*.xml

      - name: Validate the PHPCSExtra NormalizedArrays docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/phpcsstandards/phpcsextra/NormalizedArrays/Docs/*/*.xml

      - name: Validate the PHPCSExtra Universal docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/phpcsstandards/phpcsextra/Universal/Docs/*/*.xml

      - name: Validate the PHPCSDevTools PHPCSDebug docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./vendor/phpcsstandards/phpcsdevtools/PHPCSDebug/Docs/*/*.xml

      - name: Validate the YoastCS docs against the schema
        continue-on-error: true
        run: xmllint --noout --schema ./vendor/phpcsstandards/phpcsdevtools/DocsXsd/phpcsdocs.xsd ./Yoast/Docs/*/*.xml

      # Validate the Docs XML files.
      # @link http://xmlsoft.org/xmllint.html
      # For the build to properly error when validating against a scheme, these each have to be in their own condition.
      - name: Lint the XML sniff docs
        run: xmllint --noout ./Yoast/Docs/*/*Standard.xml

  temp-test-feature-complete:
    name: 'FeatureComplete check'
    runs-on: ubuntu-latest

    env:
      XMLLINT_INDENT: ' '

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: cs2pr

      - name: 'Composer: adjust dependencies'
        run: |
          composer require --no-update --no-scripts squizlabs/php_codesniffer:"dev-master" --no-interaction
          composer require --no-update --no-scripts wp-coding-standards/wpcs:"dev-develop" --no-interaction
          composer require --no-update --no-scripts phpcsstandards/phpcsextra:"dev-develop" --no-interaction
          composer require --no-update --no-scripts phpcompatibility/php-compatibility:"dev-develop as 9.9.99" --no-interaction
          composer require --no-update --no-scripts phpcsstandards/phpcsdevtools:"dev-feature-complete/fix-msg-display-order-jumbling" --no-interaction

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies
        uses: ramsey/composer-install@v2

      - name: Check feature complete PHPCS Generic
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/Generic

      - name: Check feature complete PHPCS PEAR
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/PEAR

      - name: Check feature complete PHPCS PSR1
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/PSR1

      - name: Check feature complete PHPCS PSR2
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/PSR2

      - name: Check feature complete PHPCS PSR12
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/PSR12

      - name: Check feature complete PHPCS Squiz
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/Squiz

      - name: Check feature complete PHPCS Zend
        continue-on-error: true
        run: ./../../../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/squizlabs/php_codesniffer/src/Standards/Zend

      - name: Check feature complete PHPCompatibility
        continue-on-error: true
        run: ./../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/phpcompatibility/php-compatibility/PHPCompatibility

      - name: Check feature complete WPCS
        continue-on-error: true
        run: ./../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/wp-coding-standards/wpcs/WordPress

      - name: Check feature complete PHPCSExtra NormalizedArrays
        continue-on-error: true
        run: ./../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/phpcsstandards/phpcsextra/NormalizedArrays

      - name: Check feature complete PHPCSExtra Universal
        continue-on-error: true
        run: ./../../../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/phpcsstandards/phpcsextra/Universal

      - name: Check feature complete PHPCSDevTools PHPCSDebug
        continue-on-error: true
        run: ./../bin/phpcs-check-feature-completeness -v --exclude=
        working-directory: ./vendor/phpcsstandards/phpcsdevtools/PHPCSDebug

      - name: Check feature complete YoastCS
        continue-on-error: true
        run: ./vendor/bin/phpcs-check-feature-completeness -v ./Yoast
