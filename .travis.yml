sudo: false

language:
    - php

dist: trusty

cache:
  apt: true
  directories:
    # Cache directory for older Composer versions.
    - $HOME/.composer/cache/files
    # Cache directory for more recent Composer versions.
    - $HOME/.cache/composer/files

php:
    - 5.4
    - 5.5
    - 5.6
    - 7.0
    - 7.1
    - 7.2
    - nightly

env:
  # Test against the highest supported PHPCS version.
  - PHPCS_BRANCH="dev-master" PHPLINT=1
  # Test against the lowest supported PHPCS version.
  - PHPCS_BRANCH="3.3.0"

matrix:
  fast_finish: true
  include:
    # Extra build to check for XML codestyle.
    - php: 7.1
      env: PHPCS_BRANCH="dev-master" SNIFF=1
      addons:
          apt:
              packages:
                - libxml2-utils

  allow_failures:
    # Allow failures for unstable builds.
    - php: nightly

before_install:
    # Speed up build time by disabling Xdebug.
    # https://johnblackbourn.com/reducing-travis-ci-build-times-for-wordpress-projects/
    # https://twitter.com/kelunik/status/954242454676475904
    - phpenv config-rm xdebug.ini || echo 'No xdebug config.'
    - export XMLLINT_INDENT="	"
    - export PHPCS_DIR=$(pwd)/vendor/squizlabs/php_codesniffer
    - export PHPCS_BIN=$(pwd)/vendor/bin/phpcs
    # Set the PHPCS version to test against.
    - composer require squizlabs/php_codesniffer:${PHPCS_BRANCH} --no-update --no-suggest --no-scripts
    - |
      if [[ "$SNIFF" == "1" ]]; then
          composer install --dev --no-suggest
          # The post-install-cmd script takes care of the installed_paths.
      else
          # For testing the YoastCS native sniffs, the rest of the packages aren't needed.
          composer remove wp-coding-standards/wpcs phpcompatibility/phpcompatibility-wp phpmd/phpmd --no-update
          # This will now only install the version of PHPCS to test against.
          composer install --no-dev --no-suggest --no-scripts
          # Set the installed_paths for the test environment.
          $PHPCS_BIN --config-set installed_paths $(pwd)
      fi

script:
    - if [[ "$PHPLINT" == "1" ]]; then if find . -path ./vendor -prune -o -name "*.php" -exec php -l {} \; | grep "^[Parse error|Fatal error]"; then exit 1; fi; fi
    - phpunit --filter Yoast --bootstrap="$PHPCS_DIR/tests/bootstrap.php" $PHPCS_DIR/tests/AllTests.php
    # Check the codestyle of the files within YoastCS.
    - if [[ "$SNIFF" == "1" ]]; then $PHPCS_BIN --runtime-set ignore_warnings_on_exit 1 --runtime-set testVersion 5.4-; fi
    # Validate the xml files.
    # @link http://xmlsoft.org/xmllint.html
    - if [[ "$SNIFF" == "1" ]]; then xmllint --noout ./Yoast/ruleset.xml; fi
    - if [[ "$SNIFF" == "1" ]]; then xmllint --noout ./phpmd.xml; fi
    # Check the code-style consistency of the xml files.
    - if [[ "$SNIFF" == "1" ]]; then diff -B --tabsize=4 ./Yoast/ruleset.xml <(xmllint --format "./Yoast/ruleset.xml"); fi
    - if [[ "$SNIFF" == "1" ]]; then diff -B --tabsize=4 ./phpmd.xml <(xmllint --format "./phpmd.xml"); fi
    # Validate the composer.json file.
    # @link https://getcomposer.org/doc/03-cli.md#validate
    - if [[ "$PHPLINT" == "1" ]]; then composer validate --no-check-all --strict; fi
